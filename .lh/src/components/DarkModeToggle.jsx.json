{
    "sourceFile": "src/components/DarkModeToggle.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752353751520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752366681356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,27 @@\n       onClick={toggleDarkMode}\n       aria-label={`Switch to ${isDark ? 'light' : 'dark'} mode`}\n       title={`Switch to ${isDark ? 'light' : 'dark'} mode`}\n     >\n-      {isDark ? '🌙' : '☀️'}\n+      {isDark ? (\n+        // Moon icon for dark mode\n+        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n+          <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\" fill=\"currentColor\"/>\n+        </svg>\n+      ) : (\n+        // Sun icon for light mode\n+        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n+          <circle cx=\"12\" cy=\"12\" r=\"5\" fill=\"currentColor\"/>\n+          <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n+          <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n+          <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n+          <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n+          <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n+          <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n+          <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n+          <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n+        </svg>\n+      )}\n     </button>\n   )\n }\n \n"
                }
            ],
            "date": 1752353751520,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react'\nimport './DarkModeToggle.css'\n\nfunction DarkModeToggle({ show, className = '' }) {\n  const [isDark, setIsDark] = useState(false)\n\n  useEffect(() => {\n    // Check for saved theme preference or default to system preference\n    const savedTheme = localStorage.getItem('theme')\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches\n    \n    // Default to system preference if no saved preference\n    if (savedTheme === 'dark' || (savedTheme !== 'light' && prefersDark)) {\n      setIsDark(true)\n      document.documentElement.setAttribute('data-theme', 'dark')\n    } else {\n      setIsDark(false)\n      document.documentElement.setAttribute('data-theme', 'light')\n    }\n\n    // Listen for system theme changes\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)')\n    const handleSystemThemeChange = (e) => {\n      // Only follow system changes if user hasn't set a preference\n      if (!localStorage.getItem('theme')) {\n        setIsDark(e.matches)\n        document.documentElement.setAttribute('data-theme', e.matches ? 'dark' : 'light')\n      }\n    }\n\n    mediaQuery.addEventListener('change', handleSystemThemeChange)\n    \n    return () => {\n      mediaQuery.removeEventListener('change', handleSystemThemeChange)\n    }\n  }, [])\n\n  const toggleDarkMode = () => {\n    const newTheme = !isDark\n    setIsDark(newTheme)\n    \n    if (newTheme) {\n      document.documentElement.setAttribute('data-theme', 'dark')\n      localStorage.setItem('theme', 'dark')\n    } else {\n      document.documentElement.setAttribute('data-theme', 'light')\n      localStorage.setItem('theme', 'light')\n    }\n  }\n\n  return (\n    <button \n      className={`dark-mode-toggle ${show ? 'show' : ''} ${className}`}\n      onClick={toggleDarkMode}\n      aria-label={`Switch to ${isDark ? 'light' : 'dark'} mode`}\n      title={`Switch to ${isDark ? 'light' : 'dark'} mode`}\n    >\n      {isDark ? '🌙' : '☀️'}\n    </button>\n  )\n}\n\nexport default DarkModeToggle\n"
        }
    ]
}